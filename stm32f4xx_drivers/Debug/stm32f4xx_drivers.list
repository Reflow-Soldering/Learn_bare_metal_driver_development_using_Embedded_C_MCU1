
stm32f4xx_drivers.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000518  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  080006a0  080006a8  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  080006a0  080006a0  000016a8  2**0
                  CONTENTS, READONLY
  4 .ARM          00000000  080006a0  080006a0  000016a8  2**0
                  CONTENTS, READONLY
  5 .preinit_array 00000000  080006a0  080006a8  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  080006a0  080006a0  000016a0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  080006a4  080006a4  000016a4  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  000016a8  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  000016a8  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 0000002a  00000000  00000000  000016a8  2**0
                  CONTENTS, READONLY
 13 .debug_info   0000089f  00000000  00000000  000016d2  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 00000265  00000000  00000000  00001f71  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000b8  00000000  00000000  000021d8  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000007e  00000000  00000000  00002290  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  000013ce  00000000  00000000  0000230e  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   00000d96  00000000  00000000  000036dc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    00005402  00000000  00000000  00004472  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  00009874  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000224  00000000  00000000  000098b8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000083  00000000  00000000  00009adc  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000688 	.word	0x08000688

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000688 	.word	0x08000688

080001c8 <delay>:
 */

#include "stm32f407xx.h"

void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i< 500000*2; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	4a04      	ldr	r2, [pc, #16]	@ (80001f0 <delay+0x28>)
 80001de:	4293      	cmp	r3, r2
 80001e0:	d9f8      	bls.n	80001d4 <delay+0xc>
}
 80001e2:	bf00      	nop
 80001e4:	bf00      	nop
 80001e6:	370c      	adds	r7, #12
 80001e8:	46bd      	mov	sp, r7
 80001ea:	bc80      	pop	{r7}
 80001ec:	4770      	bx	lr
 80001ee:	bf00      	nop
 80001f0:	000f423f 	.word	0x000f423f

080001f4 <main>:

int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b084      	sub	sp, #16
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed;

	GpioLed.pGPIOx = GPIOD;
 80001fa:	4b0d      	ldr	r3, [pc, #52]	@ (8000230 <main+0x3c>)
 80001fc:	607b      	str	r3, [r7, #4]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_12;
 80001fe:	230c      	movs	r3, #12
 8000200:	723b      	strb	r3, [r7, #8]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUTPUT;
 8000202:	2301      	movs	r3, #1
 8000204:	727b      	strb	r3, [r7, #9]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = OUTPUT_SPD_VERY_HIGH;
 8000206:	2303      	movs	r3, #3
 8000208:	72bb      	strb	r3, [r7, #10]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_NO_PP_PD;
 800020a:	2300      	movs	r3, #0
 800020c:	733b      	strb	r3, [r7, #12]

	GPIO_PeriClockControl(GPIOD, ENABLE);
 800020e:	2101      	movs	r1, #1
 8000210:	4807      	ldr	r0, [pc, #28]	@ (8000230 <main+0x3c>)
 8000212:	f000 f839 	bl	8000288 <GPIO_PeriClockControl>

	GPIO_Init(&GpioLed);
 8000216:	1d3b      	adds	r3, r7, #4
 8000218:	4618      	mov	r0, r3
 800021a:	f000 f91d 	bl	8000458 <GPIO_Init>

	while(1)
	{
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_12);
 800021e:	210c      	movs	r1, #12
 8000220:	4803      	ldr	r0, [pc, #12]	@ (8000230 <main+0x3c>)
 8000222:	f000 f9f9 	bl	8000618 <GPIO_ToggleOutputPin>
		delay();
 8000226:	f7ff ffcf 	bl	80001c8 <delay>
		GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_12);
 800022a:	bf00      	nop
 800022c:	e7f7      	b.n	800021e <main+0x2a>
 800022e:	bf00      	nop
 8000230:	40020c00 	.word	0x40020c00

08000234 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 8000234:	480d      	ldr	r0, [pc, #52]	@ (800026c <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 8000236:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 8000238:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 800023c:	480c      	ldr	r0, [pc, #48]	@ (8000270 <LoopForever+0x6>)
  ldr r1, =_edata
 800023e:	490d      	ldr	r1, [pc, #52]	@ (8000274 <LoopForever+0xa>)
  ldr r2, =_sidata
 8000240:	4a0d      	ldr	r2, [pc, #52]	@ (8000278 <LoopForever+0xe>)
  movs r3, #0
 8000242:	2300      	movs	r3, #0
  b LoopCopyDataInit
 8000244:	e002      	b.n	800024c <LoopCopyDataInit>

08000246 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 8000246:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 8000248:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 800024a:	3304      	adds	r3, #4

0800024c <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 800024c:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 800024e:	428c      	cmp	r4, r1
  bcc CopyDataInit
 8000250:	d3f9      	bcc.n	8000246 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 8000252:	4a0a      	ldr	r2, [pc, #40]	@ (800027c <LoopForever+0x12>)
  ldr r4, =_ebss
 8000254:	4c0a      	ldr	r4, [pc, #40]	@ (8000280 <LoopForever+0x16>)
  movs r3, #0
 8000256:	2300      	movs	r3, #0
  b LoopFillZerobss
 8000258:	e001      	b.n	800025e <LoopFillZerobss>

0800025a <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 800025a:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 800025c:	3204      	adds	r2, #4

0800025e <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 800025e:	42a2      	cmp	r2, r4
  bcc FillZerobss
 8000260:	d3fb      	bcc.n	800025a <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 8000262:	f000 f9ed 	bl	8000640 <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 8000266:	f7ff ffc5 	bl	80001f4 <main>

0800026a <LoopForever>:

LoopForever:
  b LoopForever
 800026a:	e7fe      	b.n	800026a <LoopForever>
  ldr   r0, =_estack
 800026c:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000270:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000274:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000278:	080006a8 	.word	0x080006a8
  ldr r2, =_sbss
 800027c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000280:	2000001c 	.word	0x2000001c

08000284 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000284:	e7fe      	b.n	8000284 <ADC_IRQHandler>
	...

08000288 <GPIO_PeriClockControl>:
 * @반환값					-	None
 *
 * @추가 내용					-	None
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000288:	b480      	push	{r7}
 800028a:	b083      	sub	sp, #12
 800028c:	af00      	add	r7, sp, #0
 800028e:	6078      	str	r0, [r7, #4]
 8000290:	460b      	mov	r3, r1
 8000292:	70fb      	strb	r3, [r7, #3]
	//GPIO Peripheral Clock Enable
	//GPIO 주변장치 클럭 연결
	if(EnorDi == ENABLE)
 8000294:	78fb      	ldrb	r3, [r7, #3]
 8000296:	2b01      	cmp	r3, #1
 8000298:	d162      	bne.n	8000360 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800029a:	687b      	ldr	r3, [r7, #4]
 800029c:	4a64      	ldr	r2, [pc, #400]	@ (8000430 <GPIO_PeriClockControl+0x1a8>)
 800029e:	4293      	cmp	r3, r2
 80002a0:	d106      	bne.n	80002b0 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 80002a2:	4b64      	ldr	r3, [pc, #400]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002a4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002a6:	4a63      	ldr	r2, [pc, #396]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002a8:	f043 0301 	orr.w	r3, r3, #1
 80002ac:	6313      	str	r3, [r2, #48]	@ 0x30
		else if(pGPIOx == GPIOI)
		{
			GPIOI_PCLK_DI();
		}
	}
}
 80002ae:	e0b9      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 80002b0:	687b      	ldr	r3, [r7, #4]
 80002b2:	4a61      	ldr	r2, [pc, #388]	@ (8000438 <GPIO_PeriClockControl+0x1b0>)
 80002b4:	4293      	cmp	r3, r2
 80002b6:	d106      	bne.n	80002c6 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 80002b8:	4b5e      	ldr	r3, [pc, #376]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002ba:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002bc:	4a5d      	ldr	r2, [pc, #372]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002be:	f043 0302 	orr.w	r3, r3, #2
 80002c2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002c4:	e0ae      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 80002c6:	687b      	ldr	r3, [r7, #4]
 80002c8:	4a5c      	ldr	r2, [pc, #368]	@ (800043c <GPIO_PeriClockControl+0x1b4>)
 80002ca:	4293      	cmp	r3, r2
 80002cc:	d106      	bne.n	80002dc <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 80002ce:	4b59      	ldr	r3, [pc, #356]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002d0:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002d2:	4a58      	ldr	r2, [pc, #352]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002d4:	f043 0304 	orr.w	r3, r3, #4
 80002d8:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002da:	e0a3      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80002dc:	687b      	ldr	r3, [r7, #4]
 80002de:	4a58      	ldr	r2, [pc, #352]	@ (8000440 <GPIO_PeriClockControl+0x1b8>)
 80002e0:	4293      	cmp	r3, r2
 80002e2:	d106      	bne.n	80002f2 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 80002e4:	4b53      	ldr	r3, [pc, #332]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002e6:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002e8:	4a52      	ldr	r2, [pc, #328]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002ea:	f043 0308 	orr.w	r3, r3, #8
 80002ee:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80002f0:	e098      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80002f2:	687b      	ldr	r3, [r7, #4]
 80002f4:	4a53      	ldr	r2, [pc, #332]	@ (8000444 <GPIO_PeriClockControl+0x1bc>)
 80002f6:	4293      	cmp	r3, r2
 80002f8:	d106      	bne.n	8000308 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 80002fa:	4b4e      	ldr	r3, [pc, #312]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80002fc:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80002fe:	4a4d      	ldr	r2, [pc, #308]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000300:	f043 0310 	orr.w	r3, r3, #16
 8000304:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000306:	e08d      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 8000308:	687b      	ldr	r3, [r7, #4]
 800030a:	4a4f      	ldr	r2, [pc, #316]	@ (8000448 <GPIO_PeriClockControl+0x1c0>)
 800030c:	4293      	cmp	r3, r2
 800030e:	d106      	bne.n	800031e <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 8000310:	4b48      	ldr	r3, [pc, #288]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000312:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000314:	4a47      	ldr	r2, [pc, #284]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000316:	f043 0320 	orr.w	r3, r3, #32
 800031a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800031c:	e082      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 800031e:	687b      	ldr	r3, [r7, #4]
 8000320:	4a4a      	ldr	r2, [pc, #296]	@ (800044c <GPIO_PeriClockControl+0x1c4>)
 8000322:	4293      	cmp	r3, r2
 8000324:	d106      	bne.n	8000334 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 8000326:	4b43      	ldr	r3, [pc, #268]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000328:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800032a:	4a42      	ldr	r2, [pc, #264]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800032c:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 8000330:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000332:	e077      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 8000334:	687b      	ldr	r3, [r7, #4]
 8000336:	4a46      	ldr	r2, [pc, #280]	@ (8000450 <GPIO_PeriClockControl+0x1c8>)
 8000338:	4293      	cmp	r3, r2
 800033a:	d106      	bne.n	800034a <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 800033c:	4b3d      	ldr	r3, [pc, #244]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800033e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000340:	4a3c      	ldr	r2, [pc, #240]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000342:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 8000346:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000348:	e06c      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 800034a:	687b      	ldr	r3, [r7, #4]
 800034c:	4a41      	ldr	r2, [pc, #260]	@ (8000454 <GPIO_PeriClockControl+0x1cc>)
 800034e:	4293      	cmp	r3, r2
 8000350:	d168      	bne.n	8000424 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 8000352:	4b38      	ldr	r3, [pc, #224]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000354:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000356:	4a37      	ldr	r2, [pc, #220]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000358:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 800035c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800035e:	e061      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 8000360:	687b      	ldr	r3, [r7, #4]
 8000362:	4a33      	ldr	r2, [pc, #204]	@ (8000430 <GPIO_PeriClockControl+0x1a8>)
 8000364:	4293      	cmp	r3, r2
 8000366:	d106      	bne.n	8000376 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DI();
 8000368:	4b32      	ldr	r3, [pc, #200]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800036a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800036c:	4a31      	ldr	r2, [pc, #196]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800036e:	f023 0301 	bic.w	r3, r3, #1
 8000372:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000374:	e056      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOB)
 8000376:	687b      	ldr	r3, [r7, #4]
 8000378:	4a2f      	ldr	r2, [pc, #188]	@ (8000438 <GPIO_PeriClockControl+0x1b0>)
 800037a:	4293      	cmp	r3, r2
 800037c:	d106      	bne.n	800038c <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DI();
 800037e:	4b2d      	ldr	r3, [pc, #180]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000380:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000382:	4a2c      	ldr	r2, [pc, #176]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000384:	f023 0302 	bic.w	r3, r3, #2
 8000388:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800038a:	e04b      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOC)
 800038c:	687b      	ldr	r3, [r7, #4]
 800038e:	4a2b      	ldr	r2, [pc, #172]	@ (800043c <GPIO_PeriClockControl+0x1b4>)
 8000390:	4293      	cmp	r3, r2
 8000392:	d106      	bne.n	80003a2 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DI();
 8000394:	4b27      	ldr	r3, [pc, #156]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000396:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000398:	4a26      	ldr	r2, [pc, #152]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800039a:	f023 0304 	bic.w	r3, r3, #4
 800039e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003a0:	e040      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOD)
 80003a2:	687b      	ldr	r3, [r7, #4]
 80003a4:	4a26      	ldr	r2, [pc, #152]	@ (8000440 <GPIO_PeriClockControl+0x1b8>)
 80003a6:	4293      	cmp	r3, r2
 80003a8:	d106      	bne.n	80003b8 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DI();
 80003aa:	4b22      	ldr	r3, [pc, #136]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003ac:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ae:	4a21      	ldr	r2, [pc, #132]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003b0:	f023 0308 	bic.w	r3, r3, #8
 80003b4:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003b6:	e035      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOE)
 80003b8:	687b      	ldr	r3, [r7, #4]
 80003ba:	4a22      	ldr	r2, [pc, #136]	@ (8000444 <GPIO_PeriClockControl+0x1bc>)
 80003bc:	4293      	cmp	r3, r2
 80003be:	d106      	bne.n	80003ce <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DI();
 80003c0:	4b1c      	ldr	r3, [pc, #112]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003c2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003c4:	4a1b      	ldr	r2, [pc, #108]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003c6:	f023 0310 	bic.w	r3, r3, #16
 80003ca:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003cc:	e02a      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOF)
 80003ce:	687b      	ldr	r3, [r7, #4]
 80003d0:	4a1d      	ldr	r2, [pc, #116]	@ (8000448 <GPIO_PeriClockControl+0x1c0>)
 80003d2:	4293      	cmp	r3, r2
 80003d4:	d106      	bne.n	80003e4 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DI();
 80003d6:	4b17      	ldr	r3, [pc, #92]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003d8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003da:	4a16      	ldr	r2, [pc, #88]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003dc:	f023 0320 	bic.w	r3, r3, #32
 80003e0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003e2:	e01f      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOG)
 80003e4:	687b      	ldr	r3, [r7, #4]
 80003e6:	4a19      	ldr	r2, [pc, #100]	@ (800044c <GPIO_PeriClockControl+0x1c4>)
 80003e8:	4293      	cmp	r3, r2
 80003ea:	d106      	bne.n	80003fa <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DI();
 80003ec:	4b11      	ldr	r3, [pc, #68]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003ee:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003f0:	4a10      	ldr	r2, [pc, #64]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 80003f2:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 80003f6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003f8:	e014      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOH)
 80003fa:	687b      	ldr	r3, [r7, #4]
 80003fc:	4a14      	ldr	r2, [pc, #80]	@ (8000450 <GPIO_PeriClockControl+0x1c8>)
 80003fe:	4293      	cmp	r3, r2
 8000400:	d106      	bne.n	8000410 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DI();
 8000402:	4b0c      	ldr	r3, [pc, #48]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000404:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000406:	4a0b      	ldr	r2, [pc, #44]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 8000408:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800040c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800040e:	e009      	b.n	8000424 <GPIO_PeriClockControl+0x19c>
		else if(pGPIOx == GPIOI)
 8000410:	687b      	ldr	r3, [r7, #4]
 8000412:	4a10      	ldr	r2, [pc, #64]	@ (8000454 <GPIO_PeriClockControl+0x1cc>)
 8000414:	4293      	cmp	r3, r2
 8000416:	d105      	bne.n	8000424 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DI();
 8000418:	4b06      	ldr	r3, [pc, #24]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800041a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800041c:	4a05      	ldr	r2, [pc, #20]	@ (8000434 <GPIO_PeriClockControl+0x1ac>)
 800041e:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 8000422:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000424:	bf00      	nop
 8000426:	370c      	adds	r7, #12
 8000428:	46bd      	mov	sp, r7
 800042a:	bc80      	pop	{r7}
 800042c:	4770      	bx	lr
 800042e:	bf00      	nop
 8000430:	40020000 	.word	0x40020000
 8000434:	40023800 	.word	0x40023800
 8000438:	40020400 	.word	0x40020400
 800043c:	40020800 	.word	0x40020800
 8000440:	40020c00 	.word	0x40020c00
 8000444:	40021000 	.word	0x40021000
 8000448:	40021400 	.word	0x40021400
 800044c:	40021800 	.word	0x40021800
 8000450:	40021c00 	.word	0x40021c00
 8000454:	40022000 	.word	0x40022000

08000458 <GPIO_Init>:
 *
 * @추가 내용					-	None
 */

void GPIO_Init(GPIO_Handle_t *pGPIOHandles)
{
 8000458:	b480      	push	{r7}
 800045a:	b087      	sub	sp, #28
 800045c:	af00      	add	r7, sp, #0
 800045e:	6078      	str	r0, [r7, #4]
		1101: AF13
		1110: AF14
		1111: AF15
	 *
	 */
	uint32_t temp = 0;
 8000460:	2300      	movs	r3, #0
 8000462:	617b      	str	r3, [r7, #20]
	//1번 설정 - 인터럽트 제외 코드 작성
	if(pGPIOHandles->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 8000464:	687b      	ldr	r3, [r7, #4]
 8000466:	795b      	ldrb	r3, [r3, #5]
 8000468:	2b03      	cmp	r3, #3
 800046a:	d81e      	bhi.n	80004aa <GPIO_Init+0x52>
	{
		//GPIO핀 모드가 인터럽트 모드보다 작을때 -> 인터럽트 모드는 4부터 시작
		//GPIO핀마다 2비트 사용하므로 핀 번호의 2배만큼 시프트
		//ex) 1번핀 -> 1 * 2 >>> 레지스터 2비트 부터 시작
		//    10번핀 -> 10 * 2 >>> 레지스터 20비트 부터 시작 21번 비트까지
		temp = (pGPIOHandles->GPIO_PinConfig.GPIO_PinMode <<(2 * pGPIOHandles->GPIO_PinConfig.GPIO_PinNumber));
 800046c:	687b      	ldr	r3, [r7, #4]
 800046e:	795b      	ldrb	r3, [r3, #5]
 8000470:	461a      	mov	r2, r3
 8000472:	687b      	ldr	r3, [r7, #4]
 8000474:	791b      	ldrb	r3, [r3, #4]
 8000476:	005b      	lsls	r3, r3, #1
 8000478:	fa02 f303 	lsl.w	r3, r2, r3
 800047c:	617b      	str	r3, [r7, #20]

		//이후 temp 값을 레지스터에 저장한다
		//GPIO_Handle_t 구조체는 GPIO_RegDef_t *pGPIOx와 GPIO_PinConfig_t GPIO_PinConfig 모두 가지고 있는 구조체임
		pGPIOHandles->pGPIOx->MODER &= ~(0x03 << pGPIOHandles->GPIO_PinConfig.GPIO_PinNumber); //비트 클리어
 800047e:	687b      	ldr	r3, [r7, #4]
 8000480:	681b      	ldr	r3, [r3, #0]
 8000482:	681a      	ldr	r2, [r3, #0]
 8000484:	687b      	ldr	r3, [r7, #4]
 8000486:	791b      	ldrb	r3, [r3, #4]
 8000488:	4619      	mov	r1, r3
 800048a:	2303      	movs	r3, #3
 800048c:	408b      	lsls	r3, r1
 800048e:	43db      	mvns	r3, r3
 8000490:	4619      	mov	r1, r3
 8000492:	687b      	ldr	r3, [r7, #4]
 8000494:	681b      	ldr	r3, [r3, #0]
 8000496:	400a      	ands	r2, r1
 8000498:	601a      	str	r2, [r3, #0]
		pGPIOHandles->pGPIOx->MODER |= temp;
 800049a:	687b      	ldr	r3, [r7, #4]
 800049c:	681b      	ldr	r3, [r3, #0]
 800049e:	6819      	ldr	r1, [r3, #0]
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	681b      	ldr	r3, [r3, #0]
 80004a4:	697a      	ldr	r2, [r7, #20]
 80004a6:	430a      	orrs	r2, r1
 80004a8:	601a      	str	r2, [r3, #0]
	}
	else
	{
		//인터럽트 모드에서 작성
	}
	temp = 0;
 80004aa:	2300      	movs	r3, #0
 80004ac:	617b      	str	r3, [r7, #20]

	//2번 설정 핀 속도
	temp = (pGPIOHandles->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandles->GPIO_PinConfig.GPIO_PinSpeed));
 80004ae:	687b      	ldr	r3, [r7, #4]
 80004b0:	799b      	ldrb	r3, [r3, #6]
 80004b2:	461a      	mov	r2, r3
 80004b4:	687b      	ldr	r3, [r7, #4]
 80004b6:	799b      	ldrb	r3, [r3, #6]
 80004b8:	005b      	lsls	r3, r3, #1
 80004ba:	fa02 f303 	lsl.w	r3, r2, r3
 80004be:	617b      	str	r3, [r7, #20]
	pGPIOHandles->pGPIOx->OSPEEDR &= ~(0x03 << pGPIOHandles->GPIO_PinConfig.GPIO_PinSpeed); //비트 클리어
 80004c0:	687b      	ldr	r3, [r7, #4]
 80004c2:	681b      	ldr	r3, [r3, #0]
 80004c4:	689a      	ldr	r2, [r3, #8]
 80004c6:	687b      	ldr	r3, [r7, #4]
 80004c8:	799b      	ldrb	r3, [r3, #6]
 80004ca:	4619      	mov	r1, r3
 80004cc:	2303      	movs	r3, #3
 80004ce:	408b      	lsls	r3, r1
 80004d0:	43db      	mvns	r3, r3
 80004d2:	4619      	mov	r1, r3
 80004d4:	687b      	ldr	r3, [r7, #4]
 80004d6:	681b      	ldr	r3, [r3, #0]
 80004d8:	400a      	ands	r2, r1
 80004da:	609a      	str	r2, [r3, #8]
	pGPIOHandles->pGPIOx->OSPEEDR |= temp;
 80004dc:	687b      	ldr	r3, [r7, #4]
 80004de:	681b      	ldr	r3, [r3, #0]
 80004e0:	6899      	ldr	r1, [r3, #8]
 80004e2:	687b      	ldr	r3, [r7, #4]
 80004e4:	681b      	ldr	r3, [r3, #0]
 80004e6:	697a      	ldr	r2, [r7, #20]
 80004e8:	430a      	orrs	r2, r1
 80004ea:	609a      	str	r2, [r3, #8]

	temp =0;
 80004ec:	2300      	movs	r3, #0
 80004ee:	617b      	str	r3, [r7, #20]

	//3번 설정 풀업 풀다운
	temp = (pGPIOHandles->GPIO_PinConfig.GPIO_PinPuPdControl << (2 << pGPIOHandles->GPIO_PinConfig.GPIO_PinPuPdControl));
 80004f0:	687b      	ldr	r3, [r7, #4]
 80004f2:	79db      	ldrb	r3, [r3, #7]
 80004f4:	461a      	mov	r2, r3
 80004f6:	687b      	ldr	r3, [r7, #4]
 80004f8:	79db      	ldrb	r3, [r3, #7]
 80004fa:	4619      	mov	r1, r3
 80004fc:	2302      	movs	r3, #2
 80004fe:	408b      	lsls	r3, r1
 8000500:	fa02 f303 	lsl.w	r3, r2, r3
 8000504:	617b      	str	r3, [r7, #20]
	pGPIOHandles->pGPIOx->PUPDR &= ~(0x03 << pGPIOHandles->GPIO_PinConfig.GPIO_PinPuPdControl); //비트 클리어
 8000506:	687b      	ldr	r3, [r7, #4]
 8000508:	681b      	ldr	r3, [r3, #0]
 800050a:	68da      	ldr	r2, [r3, #12]
 800050c:	687b      	ldr	r3, [r7, #4]
 800050e:	79db      	ldrb	r3, [r3, #7]
 8000510:	4619      	mov	r1, r3
 8000512:	2303      	movs	r3, #3
 8000514:	408b      	lsls	r3, r1
 8000516:	43db      	mvns	r3, r3
 8000518:	4619      	mov	r1, r3
 800051a:	687b      	ldr	r3, [r7, #4]
 800051c:	681b      	ldr	r3, [r3, #0]
 800051e:	400a      	ands	r2, r1
 8000520:	60da      	str	r2, [r3, #12]
	pGPIOHandles->pGPIOx->PUPDR |= temp;
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	68d9      	ldr	r1, [r3, #12]
 8000528:	687b      	ldr	r3, [r7, #4]
 800052a:	681b      	ldr	r3, [r3, #0]
 800052c:	697a      	ldr	r2, [r7, #20]
 800052e:	430a      	orrs	r2, r1
 8000530:	60da      	str	r2, [r3, #12]

	temp = 0;
 8000532:	2300      	movs	r3, #0
 8000534:	617b      	str	r3, [r7, #20]

	//4번 설정 출력 타입 설정
	//16비트 설정함 r각 1비트
	temp = (pGPIOHandles->GPIO_PinConfig.GPIO_PinOPType << ( pGPIOHandles->GPIO_PinConfig.GPIO_PinOPType));
 8000536:	687b      	ldr	r3, [r7, #4]
 8000538:	7a1b      	ldrb	r3, [r3, #8]
 800053a:	461a      	mov	r2, r3
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	7a1b      	ldrb	r3, [r3, #8]
 8000540:	fa02 f303 	lsl.w	r3, r2, r3
 8000544:	617b      	str	r3, [r7, #20]
	pGPIOHandles->pGPIOx->OTYPER &= ~(0x01 << pGPIOHandles->GPIO_PinConfig.GPIO_PinOPType); //비트 클리어
 8000546:	687b      	ldr	r3, [r7, #4]
 8000548:	681b      	ldr	r3, [r3, #0]
 800054a:	685a      	ldr	r2, [r3, #4]
 800054c:	687b      	ldr	r3, [r7, #4]
 800054e:	7a1b      	ldrb	r3, [r3, #8]
 8000550:	4619      	mov	r1, r3
 8000552:	2301      	movs	r3, #1
 8000554:	408b      	lsls	r3, r1
 8000556:	43db      	mvns	r3, r3
 8000558:	4619      	mov	r1, r3
 800055a:	687b      	ldr	r3, [r7, #4]
 800055c:	681b      	ldr	r3, [r3, #0]
 800055e:	400a      	ands	r2, r1
 8000560:	605a      	str	r2, [r3, #4]
	pGPIOHandles->pGPIOx->OTYPER |= temp;
 8000562:	687b      	ldr	r3, [r7, #4]
 8000564:	681b      	ldr	r3, [r3, #0]
 8000566:	6859      	ldr	r1, [r3, #4]
 8000568:	687b      	ldr	r3, [r7, #4]
 800056a:	681b      	ldr	r3, [r3, #0]
 800056c:	697a      	ldr	r2, [r7, #20]
 800056e:	430a      	orrs	r2, r1
 8000570:	605a      	str	r2, [r3, #4]

	temp = 0;
 8000572:	2300      	movs	r3, #0
 8000574:	617b      	str	r3, [r7, #20]

	//5번 ALT 기능 모드 설정
	if(pGPIOHandles->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 8000576:	687b      	ldr	r3, [r7, #4]
 8000578:	795b      	ldrb	r3, [r3, #5]
 800057a:	2b02      	cmp	r3, #2
 800057c:	d147      	bne.n	800060e <GPIO_Init+0x1b6>
	{
		uint32_t temp1, temp2;

		temp1 = pGPIOHandles->GPIO_PinConfig.GPIO_PinNumber / 8;
 800057e:	687b      	ldr	r3, [r7, #4]
 8000580:	791b      	ldrb	r3, [r3, #4]
 8000582:	08db      	lsrs	r3, r3, #3
 8000584:	b2db      	uxtb	r3, r3
 8000586:	613b      	str	r3, [r7, #16]
		temp2 = pGPIOHandles->GPIO_PinConfig.GPIO_PinNumber % 8;
 8000588:	687b      	ldr	r3, [r7, #4]
 800058a:	791b      	ldrb	r3, [r3, #4]
 800058c:	f003 0307 	and.w	r3, r3, #7
 8000590:	60fb      	str	r3, [r7, #12]
		if(temp1 == 0)
 8000592:	693b      	ldr	r3, [r7, #16]
 8000594:	2b00      	cmp	r3, #0
 8000596:	d11a      	bne.n	80005ce <GPIO_Init+0x176>
		{
			pGPIOHandles->pGPIOx->AFRL &= ~(0xF << (4 * temp2) );
 8000598:	687b      	ldr	r3, [r7, #4]
 800059a:	681b      	ldr	r3, [r3, #0]
 800059c:	6a1a      	ldr	r2, [r3, #32]
 800059e:	68fb      	ldr	r3, [r7, #12]
 80005a0:	009b      	lsls	r3, r3, #2
 80005a2:	210f      	movs	r1, #15
 80005a4:	fa01 f303 	lsl.w	r3, r1, r3
 80005a8:	43db      	mvns	r3, r3
 80005aa:	4619      	mov	r1, r3
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	681b      	ldr	r3, [r3, #0]
 80005b0:	400a      	ands	r2, r1
 80005b2:	621a      	str	r2, [r3, #32]
			pGPIOHandles->pGPIOx->AFRL |= (0xF << (4 * temp2) );
 80005b4:	687b      	ldr	r3, [r7, #4]
 80005b6:	681b      	ldr	r3, [r3, #0]
 80005b8:	6a1a      	ldr	r2, [r3, #32]
 80005ba:	68fb      	ldr	r3, [r7, #12]
 80005bc:	009b      	lsls	r3, r3, #2
 80005be:	210f      	movs	r1, #15
 80005c0:	fa01 f303 	lsl.w	r3, r1, r3
 80005c4:	4619      	mov	r1, r3
 80005c6:	687b      	ldr	r3, [r7, #4]
 80005c8:	681b      	ldr	r3, [r3, #0]
 80005ca:	430a      	orrs	r2, r1
 80005cc:	621a      	str	r2, [r3, #32]
		}
		if(temp2 == 1)
 80005ce:	68fb      	ldr	r3, [r7, #12]
 80005d0:	2b01      	cmp	r3, #1
 80005d2:	d11c      	bne.n	800060e <GPIO_Init+0x1b6>
		{
			pGPIOHandles->pGPIOx->AFRH &= ~(0xF << (4 * temp2) );
 80005d4:	687b      	ldr	r3, [r7, #4]
 80005d6:	681b      	ldr	r3, [r3, #0]
 80005d8:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80005da:	68fb      	ldr	r3, [r7, #12]
 80005dc:	009b      	lsls	r3, r3, #2
 80005de:	210f      	movs	r1, #15
 80005e0:	fa01 f303 	lsl.w	r3, r1, r3
 80005e4:	43db      	mvns	r3, r3
 80005e6:	4619      	mov	r1, r3
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	681b      	ldr	r3, [r3, #0]
 80005ec:	400a      	ands	r2, r1
 80005ee:	625a      	str	r2, [r3, #36]	@ 0x24
			pGPIOHandles->pGPIOx->AFRH |= (pGPIOHandles->GPIO_PinConfig.GPIO_AltFunMode << (4 * temp2) );
 80005f0:	687b      	ldr	r3, [r7, #4]
 80005f2:	681b      	ldr	r3, [r3, #0]
 80005f4:	6a5a      	ldr	r2, [r3, #36]	@ 0x24
 80005f6:	687b      	ldr	r3, [r7, #4]
 80005f8:	7a5b      	ldrb	r3, [r3, #9]
 80005fa:	4619      	mov	r1, r3
 80005fc:	68fb      	ldr	r3, [r7, #12]
 80005fe:	009b      	lsls	r3, r3, #2
 8000600:	fa01 f303 	lsl.w	r3, r1, r3
 8000604:	4619      	mov	r1, r3
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	430a      	orrs	r2, r1
 800060c:	625a      	str	r2, [r3, #36]	@ 0x24
		}
	}


}
 800060e:	bf00      	nop
 8000610:	371c      	adds	r7, #28
 8000612:	46bd      	mov	sp, r7
 8000614:	bc80      	pop	{r7}
 8000616:	4770      	bx	lr

08000618 <GPIO_ToggleOutputPin>:
 * @반환값					-	없음
 *
 * @추가 내용					-	포트 단위로 설정
 */
void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000618:	b480      	push	{r7}
 800061a:	b083      	sub	sp, #12
 800061c:	af00      	add	r7, sp, #0
 800061e:	6078      	str	r0, [r7, #4]
 8000620:	460b      	mov	r3, r1
 8000622:	70fb      	strb	r3, [r7, #3]
//	pGPIOx->ODR = pGPIOx->ODR ^ (1 << PinNumber);

	pGPIOx->ODR ^= (1 << PinNumber);
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	695b      	ldr	r3, [r3, #20]
 8000628:	78fa      	ldrb	r2, [r7, #3]
 800062a:	2101      	movs	r1, #1
 800062c:	fa01 f202 	lsl.w	r2, r1, r2
 8000630:	405a      	eors	r2, r3
 8000632:	687b      	ldr	r3, [r7, #4]
 8000634:	615a      	str	r2, [r3, #20]
	uint8_t value=0;

	value = ~((pGPIOx->ODR >> PinNumber) & (0x00000001));
	pGPIOx->ODR &= (value<<PinNumber);
	*/
}
 8000636:	bf00      	nop
 8000638:	370c      	adds	r7, #12
 800063a:	46bd      	mov	sp, r7
 800063c:	bc80      	pop	{r7}
 800063e:	4770      	bx	lr

08000640 <__libc_init_array>:
 8000640:	b570      	push	{r4, r5, r6, lr}
 8000642:	4d0d      	ldr	r5, [pc, #52]	@ (8000678 <__libc_init_array+0x38>)
 8000644:	4c0d      	ldr	r4, [pc, #52]	@ (800067c <__libc_init_array+0x3c>)
 8000646:	1b64      	subs	r4, r4, r5
 8000648:	10a4      	asrs	r4, r4, #2
 800064a:	2600      	movs	r6, #0
 800064c:	42a6      	cmp	r6, r4
 800064e:	d109      	bne.n	8000664 <__libc_init_array+0x24>
 8000650:	4d0b      	ldr	r5, [pc, #44]	@ (8000680 <__libc_init_array+0x40>)
 8000652:	4c0c      	ldr	r4, [pc, #48]	@ (8000684 <__libc_init_array+0x44>)
 8000654:	f000 f818 	bl	8000688 <_init>
 8000658:	1b64      	subs	r4, r4, r5
 800065a:	10a4      	asrs	r4, r4, #2
 800065c:	2600      	movs	r6, #0
 800065e:	42a6      	cmp	r6, r4
 8000660:	d105      	bne.n	800066e <__libc_init_array+0x2e>
 8000662:	bd70      	pop	{r4, r5, r6, pc}
 8000664:	f855 3b04 	ldr.w	r3, [r5], #4
 8000668:	4798      	blx	r3
 800066a:	3601      	adds	r6, #1
 800066c:	e7ee      	b.n	800064c <__libc_init_array+0xc>
 800066e:	f855 3b04 	ldr.w	r3, [r5], #4
 8000672:	4798      	blx	r3
 8000674:	3601      	adds	r6, #1
 8000676:	e7f2      	b.n	800065e <__libc_init_array+0x1e>
 8000678:	080006a0 	.word	0x080006a0
 800067c:	080006a0 	.word	0x080006a0
 8000680:	080006a0 	.word	0x080006a0
 8000684:	080006a4 	.word	0x080006a4

08000688 <_init>:
 8000688:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 800068a:	bf00      	nop
 800068c:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800068e:	bc08      	pop	{r3}
 8000690:	469e      	mov	lr, r3
 8000692:	4770      	bx	lr

08000694 <_fini>:
 8000694:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000696:	bf00      	nop
 8000698:	bcf8      	pop	{r3, r4, r5, r6, r7}
 800069a:	bc08      	pop	{r3}
 800069c:	469e      	mov	lr, r3
 800069e:	4770      	bx	lr
